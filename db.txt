TIPI DI DATO:

    NUMERICI:
        INTERI:

            ● TINYINT
            Solo un byte per salvare numeri che vanno ad -128 a 127. Viene utilizzato ad esempio per salvare i
            valori boolean, proprio perché è il tipo di dato più piccolo possibile

            ● SMALL / MEDIUMINT
            saliamo a 2 e 3 bytes

            ● INT
            4 bytes con numeri che possono andare da -2147483648 e 2147483647.

            ● BIGINT
            un INT con il doppio di bytes disponibili.
        
        CON VIRGOLA:

            ● FLOAT(I, D)
            un numero con la virgola da 4 bytes

            ● DOUBLE(I, D)
            un numero con la virgola da 8 bytes

            ● DECIMAL(I, D)
            un double che gestisce arrotondamenti considerando i numeri dal punto di vista finanziario

    STRINGHE (ALFANUMERICI):

            ● VARCHAR(numero)
            hanno lunghezza definibile ma non superiore a 255 caratteri.

            ● TEXT
            65535 caratteri - è usato ad esempio per le descrizioni prodotto

            ● MEDIUMTEXT
            16mb

            ● LONGTEXT
            4.2gb - usato per salvare porzioni di HTML o lunghi testi

    DATE:

            ● DATETIME
            avrà formato data più ora (YYYY-MM-GG HH:II:SS)

            ● DATE
            avrà solo la data (YYYY-MM-GG)

            ● TIME
            avrà solo l’orario (HH:II:SS)

            ● YEAR
            avrà solo l’anno (YYYY)

            ● TIMESTAMP
            può avere diversi formati

ATTRIBUTI DATO:

● NULL / NOTNULL
dà la possibilità o meno di lasciare vuota la colonna. Se abbiamo Not Null e durante il salvataggio quella
colonna non ha valore, verrà restituito un errore e non verrà salvato alcun valore.
Esempio:
In un database di un'anagrafe, la colonna data_di_nascita sarà NOT NULL per indicare che non è possibile
salvare nel database di una persona senza indicare anche la data di nascita

● DEFAULT
permette di settare un valore di default alla colonna qualora non fosse presente alcun valore al momento
del salvataggio.
Esempio:
Se vogliamo contare il numero di volte in cui un prodotto è stato acquistato, può avere senso avere DEFAULT(0)

● AUTO_INCREMENT
Incrementa ad ogni nuovo record. Viene utilizzato ad esempio per gli ID. Ogni volta che si aggiunge un
record, in automatico l’ID sarà +1 rispetto al record precedente. Utilizzabile con colonna di tipo
numero.
● UNIQUE
Indica che i valori di quella colonna devono essere unici, non ci possono essere valori ripetuti



● Database Università

    -DIPARTIMENTO

        id: SMALLINT; NOT NULLABLE; PRIMARY KEY; AUTO_INCREMENT; UNIQUE;
        nome: VARCHAR(128); NOT NULLABLE;
        email: VARCHAR(128); NOT NULLABLE; UNIQUE; 
        pec: VARCHAR(128); NOT NULLABLE; UNIQUE;
        tel: VARCHAR(32); NOT NULLABLE; 
        fax: TINYINT; NOT NULLABLE; 
        sitoWeb: VARCHAR(128); NOT NULLABLE;
        indirizzoSede: VARCHAR(64); NOT NULLABLE;
        nomeDirettore: VARCHAR(64); NOT NULLABLE;
        emailDirettore: VARCHAR(128); NOT NULLABLE; 
        pecDirettore: VARCHAR(128); NULLABLE;
        telDirettore: VARCHAR(32); NULLABLE;

    -CORSO DI LAUREA

        codice: SMALLINT; NOT NULLABLE; UNIQUE;
        nome: VARCHAR(128); NOT NULLABLE;
        tipoAccesso: VARCHAR(32); NOT NULLABLE;
        durata: TINYINT(1); NOT NULLABLE;
        cfu: TINYINT(3); NOT NULLABLE;
        classeLaurea: VARCHAR(8); NOT NULLABLE;
        nomeDipartimento: VARCHAR(128); NOT NULLABLE; 
        sitoWeb: VARCHAR(128); NOT NULLABLE;
        requisitiAmmissione: VARCHAR(128); NOT NULLABLE;
        dataImmatricolazione: DATE; NOT NULLABLE;
        sbocchiProfessionali: TEXT; NOT NULLABLE;

    -CORSO

        id: SMALLINT; NOT NULLABLE; PRIMARY KEY; AUTO_INCREMENT; UNIQUE;
        nome: VARCHAR(128); NOT NULLABLE;
        cfu: TINYINT(2); NOT NULLABLE;
        anno: TINYINT(1); NOT NULLABLE;
        descrizione: TEXT; NOT NULLABLE;

    -INSEGNANTE

        matricola: VARCHAR(32); NOT NULLABLE; UNIQUE;
        nome: VARCHAR(128); NOT NULLABLE;
        cognome: VARCHAR(128); NOT NULLABLE;
        genere: VARCHAR(16); NOT NULLABLE;
        dataNascita: DATE; NOT NULLABLE;
        luogoNascita: VARCHAR(64); NOT NULLABLE;
        email: VARCHAR(128); NOT NULLABLE; 
        pec: VARCHAR(128); NULLABLE;
        tel: VARCHAR(32); NULLABLE;
        salario: INT; NOT NULLABLE;
        username: VARCHAR(64); NOT NULLABLE; UNIQUE;
        password: VARCHAR(64); NOT NULLABLE;

    -APPELLO

        codice: SMALLINT; NOT NULLABLE; UNIQUE;
        numero: VARCHAR(32); DEFAULT('Primo');
        sessione: VARCHAR(32); NOT NULLABLE;
        tipo: VARCHAR(32); DEFAULT('Ordinario');
        dataInizio: DATE; NOT NULLABLE;
        dataFine: DATE; NOT NULLABLE;

    -STUDENTE

        matricola: VARCHAR(32); NOT NULLABLE; UNIQUE;
        nome: VARCHAR(128); NOT NULLABLE;
        cognome: VARCHAR(128); NOT NULLABLE;
        genere: VARCHAR(16); NOT NULLABLE;
        dataNascita: DATE; NOT NULLABLE;
        luogoNascita: VARCHAR(64); NOT NULLABLE;
        email: VARCHAR(128); NOT NULLABLE; 
        pec: VARCHAR(128); NULLABLE;
        tel: VARCHAR(32); NULLABLE;
        username: VARCHAR(64); NOT NULLABLE; UNIQUE;
        password: VARCHAR(64); NOT NULLABLE;

    -ESITO

        codice: SMALLINT; NOT NULLABLE;
        valutazione: TINYINT(2); NOT NULLABLE;

